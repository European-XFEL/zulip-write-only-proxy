[tool.poetry]
name = "zulip-write-only-proxy"
version = "0.0.0"
description = ""
authors = ["Robert Rosca"]
readme = "README.md"
packages = [{ include = "zulip_write_only_proxy", from = "src" }]

[tool.poetry.scripts]
damnit-zulip = "zulip_write_only_proxy.cli:app"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
fastapi = "^0.104"
uvicorn = "^0.23.1"
zulip = "^0.8.2"
python-multipart = "^0.0.6"
orjson = "^3.9.2"
pydantic = "^2.4.2"
typer = "^0.9.0"
pydantic-settings = "^2.4.0"
authlib = "^1.3.0"
itsdangerous = "^2.1.2"
structlog = "^24.1.0"
sentry-sdk = "^1.40.3"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
httpx = "^0.24.1"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.1"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.21.1"
commitizen = "^3.6.0"
types-colorama = "^0.4.15.20240205"
rich = "^13.7.0"
debugpy = "^1.8.1"

[tool.poetry.group.lint.dependencies]
ruff = "^0.1.0"
mypy = "^1.4.1"
pyright = "^1.1.320"
black = "^23.7.0"

[tool.black]
line-length = 88
target-version = ["py311", "py312"]

[tool.poe.tasks.dev]
shell = """
if [ -z ${debug} ]; then
  python3 -Xfrozen_modules=off -m debugpy --listen 5678 -m zulip_write_only_proxy.main
else
  python3 -m zulip_write_only_proxy.main
fi
"""
args = { debug = { default = "false", type = "boolean" } }

[tool.poe.tasks]
prod = { shell = "python3 -m zulip_write_only_proxy.main", env = { ZWOP_LOG_LEVEL = "info", ZWOP_DEBUG = "False" } }

test = "python3 -m pytest --cov=zulip_write_only_proxy --cov-report=term-missing --cov-report xml --cov-branch"

mypy = "mypy ./src ./tests"
pyright = "pyright ./src ./tests"

lint = { sequence = [
  { cmd = "ruff check ./src ./tests" },
  { ref = "mypy" },
  { ref = "pyright" },
], ignore_fail = "return_non_zero" }

format = { sequence = [
  { cmd = "ruff check ./src ./tests --fix" },
  { cmd = "ruff format ./src ./tests" },
], ignore_fail = "return_non_zero" }

[tool.coverage.run]
# Exclude CLI from coverage as it is not really required anymore
omit = ["src/zulip_write_only_proxy/cli.py"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[tool.poetry-dynamic-versioning]
enable = true
dirty = true
style = "semver"

[tool.poetry-dynamic-versioning.substitution]
folders = [{ path = "src" }]

[tool.poetry-dynamic-versioning.files."src/zulip_write_only_proxy/_version.py"]
persistent-substitution = true
initial-content = """
  # These version placeholders will be replaced later during substitution.
  __version__ = "0.0.0"
  __version_tuple__ = (0, 0, 0)
"""

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"
